// Generated by CoffeeScript 1.6.3
CodeMirror.defineMode('gibbon', function(cm, options) {
  return {
    lineComment: '#',
    startState: function() {
      return {
        inString: false,
        inComment: false,
        inVariable: false,
        inNumber: false
      };
    },
    token: function(stream, state) {
      var next;
      next = stream.peek();
      if (!state.inString && next === "'") {
        stream.next();
        state.inString = true;
      }
      if (!state.inNumber && next.match(/[0-9]/)) {
        stream.next();
        state.inNumber = true;
      } else if (!state.inComment && next === '#') {
        stream.next();
        state.inComment = true;
      } else if (!state.inVariable && next === '@') {
        stream.next();
        state.inVariable = true;
      } else if (!state.inQuery && next === '.') {
        stream.next();
        state.inQuery = true;
      } else if (!state.inString && !state.inComment && next.match(/[\[\]*{}]/)) {
        stream.next();
        return 'bracket';
      } else {
        stream.next();
      }
      if (state.inComment) {
        stream.skipToEnd();
        state.inComment = false;
        return 'comment';
      } else if (state.inNumber) {
        if (stream.skipTo(' ')) {
          stream.next();
        } else {
          stream.skipToEnd();
        }
        state.inNumber = false;
        return 'number';
      } else if (state.inVariable) {
        if (stream.skipTo(' ')) {
          stream.next();
        } else {
          stream.skipToEnd();
        }
        state.inVariable = false;
        return 'variable-2';
      } else if (state.inString) {
        if (stream.skipTo("'")) {
          stream.next();
          state.inString = false;
        } else {
          stream.skipToEnd();
        }
        return 'string';
      } else if (state.inQuery) {
        if (stream.skipTo(' ')) {
          stream.next();
        } else {
          stream.skipToEnd();
        }
        state.inQuery = false;
        return 'keyword';
      } else {
        return null;
      }
    }
  };
});
